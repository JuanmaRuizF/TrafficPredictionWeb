{"version":3,"sources":["Components/Header.js","Components/GraficaCalle.js","Components/TrafficStreet.js","Components/averageTraffic.js","Components/GraficaHora.js","Components/TrafficHour.js","Components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Prueba","props","useState","condition1","setcondition1","streetName","setStreetName","useEffect","graph_info","labels_street","color_street","data_street","data","Today","map","s","streetname","Object","entries","value","push","pop","console","log","length","graphData","labels","datasets","label","backgroundColor","borderWidth","barData","options","scales","yAxes","ticks","beginAtZero","title","display","text","legend","position","barOptions","Button","variant","size","onClick","dataToday","Body","selectedStreet","setSelectedStreet","Form","Group","controlId","Control","as","onChange","event","target","custom","averageTraffic","date_now_NY","Date","toLocaleString","timeZone","timeStyle","hora","substring","parseInt","n2","n1","i","GraficaHora","selectedHour","setSelectedHour","selectedhour","indexAxis","elements","bar","responsive","plugins","TrafficHour","currentTimeSelection","Map","src","width","height","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fefa310.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styles/Header.css'; \r\n\r\nfunction Header(){\r\n    return(\r\n        <div className = \"header\">HOLAAAAAAAAAAA HEADER</div>\r\n    );\r\n}\r\n\r\nexport default Header","import { Bar} from 'react-chartjs-2';\r\nimport React, { useState, useEffect } from 'react';\r\nimport data from '../Data/TrafficJSON.json';\r\nimport TrafficStreet from './TrafficStreet'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../Styles/GraficaCalle.css'\r\n\r\n\r\nfunction graphData(props){\r\n    var labels_street = ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23']\r\n\r\n    var color_street = [];\r\n    var data_street = []\r\n    data.Today.map(s => {\r\n        if(s[\"street\"]===props.streetname){\r\n            // console.log(s)\r\n            for (const [, value] of Object.entries(s)) {\r\n                data_street.push(value)\r\n                if(value === 1){\r\n                    color_street.push('rgba(22, 191, 37, 22)')\r\n                }else{\r\n                    color_street.push('rgba(222, 37, 37, 1)')\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    })\r\n\r\n\r\n    data_street.pop()\r\n    color_street.pop()\r\n\r\n    console.log(labels_street.length)\r\n    console.log(data_street.length)\r\n    console.log(color_street.length)\r\n\r\n    var return_array = [labels_street, data_street, color_street];\r\n\r\n    return return_array;\r\n\r\n\r\n}\r\n\r\n\r\nfunction Prueba(props) {\r\n    const [condition1, setcondition1]  = useState(true); \r\n    const [streetName, setStreetName] = useState(props)\r\n    useEffect(() =>{\r\n        setStreetName(props);\r\n    },[props])\r\n    \r\n    var graph_info = graphData(props)\r\n\r\n\r\n    console.log(props.streetname);\r\n\r\n    const [barData, ] = useState({\r\n        labels: graph_info[0],\r\n        datasets: [\r\n            {\r\n                label: streetName.streetname,\r\n                data: graph_info[1],\r\n                backgroundColor: graph_info[2],\r\n                borderWidth: 2\r\n            }\r\n        ]\r\n    });\r\n\r\n    // set options\r\n    const [barOptions, ] = useState({\r\n        options: {\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: props.streetname,\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: 'top'\r\n            }\r\n        }\r\n    });\r\n\r\n    if(condition1){\r\n        return (\r\n            <>\r\n            <div className=\"mainContainer\">\r\n            <h3 className=\"centerTitle\"> Visualize traffic per hour</h3>\r\n                <div className=\"BarExample\">\r\n                    <Bar\r\n                        data={barData}\r\n                        options={barOptions} />\r\n                </div>\r\n                <p>X Axis displays all the hours in a day. The Y axis displays the amount of traffic that is \r\n                    expected at a given hour. The possible values are 1 or 2. A value of 2 means that the traffic\r\n                    at that given hour will be bad in that street. On the other side, a value of 1 means that the traffic\r\n                    should be good.</p>\r\n                <div className=\"centrado\">\r\n                <Button variant=\"primary\" size=\"lg\" onClick={() => \r\n                    setcondition1(false)\r\n\r\n                    }>Select another Street</Button>{' '}\r\n                </div>\r\n            </div>\r\n            \r\n            </>\r\n        );\r\n    }else{\r\n        return(\r\n            <TrafficStreet></TrafficStreet>\r\n        )\r\n    }\r\n    // return JSX\r\n\r\n}\r\n\r\nexport default Prueba;","\r\nimport React from 'react';\r\nimport data from '../Data/TrafficJSON.json'\r\nimport {useState} from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport GraficaCalle from './GraficaCalle'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../Styles/TrafficStreet.css'\r\n\r\nconst dataToday = data.Today;\r\n\r\n\r\n\r\n\r\nfunction Body(){\r\n\r\n\r\n    const [selectedStreet, setSelectedStreet] = useState(\"11th ave n ganservoort - 12th ave @ 40th st\");\r\n\r\n    const [condition1, setcondition1]  = useState(true); \r\n\r\n\r\n    if(condition1 ){\r\n        return (\r\n            <div className=\"mainContainer\">\r\n                <h3 className=\"centerTitle\"> Visualize traffic per street</h3>\r\n    \r\n                <Form className=\"mt-5\">\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Control as=\"select\" onChange={ (event) =>{\r\n                            setSelectedStreet(event.target.value)\r\n                            // console.log(event.target.value)\r\n                            // console.log(selectedStreet)\r\n                        }} custom>\r\n                            {dataToday.map(s => (\r\n                                    <option key={s[\"street\"]} value={s[\"street\"]}>{s[\"street\"]}</option>\r\n                            ))}\r\n                            \r\n    \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <div className=\"centrado\">\r\n                    <Button variant=\"primary\" size=\"lg\" onClick={() => \r\n                    setcondition1(false)\r\n\r\n                    }>Check Traffic for this Street</Button>{' '}\r\n\r\n                </div>\r\n    \r\n\r\n\r\n    \r\n    \r\n                <div className=\"BarExample\">\r\n    \r\n                </div>\r\n                {/* <iframe src=\"https://www.google.com/maps/d/u/0/embed?mid=1GXf-V5fhF0FqSJ4Ogfa4SFCOu5yG0_A0\" width=\"640\" height=\"480\"></iframe> */}\r\n    \r\n            </div>\r\n\r\n        );\r\n        \r\n    }else {\r\n        console.log({selectedStreet})\r\n        return(\r\n\r\n            <GraficaCalle streetname={selectedStreet}></GraficaCalle>\r\n        )\r\n    \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport data from '../Data/TrafficJSON.json'\r\nimport '../Styles/AverageTraffic.css'\r\n\r\nconst dataToday = data.Today;\r\nfunction averageTraffic(){\r\n\r\n\r\n\r\n    var date_now_NY = new Date().toLocaleString(\"en-US\", {\r\n        timeZone: \"America/New_York\" ,\r\n        timeStyle: 'short',\r\n    });\r\n\r\n    var hora=\"\";\r\n\r\n    if(date_now_NY.length > 7){\r\n        if(date_now_NY.substring(6,8) === \"AM\"){\r\n            hora = date_now_NY.substring(0,2)\r\n        }else{\r\n            hora = parseInt(date_now_NY.substring(0,2)) + 12\r\n        }\r\n    }else{\r\n        if(date_now_NY.substring(5,7) === \"AM\"){\r\n            hora = date_now_NY.substring(0,1)\r\n        }else{\r\n            hora = parseInt(date_now_NY.substring(0,1)) + 12\r\n        }\r\n    }\r\n\r\n\r\n    // console.log(hora);\r\n\r\n    \r\n    var n2 = 0;\r\n    var n1 = 0;\r\n\r\n    for(var i=0; i<dataToday.length; i+=1){\r\n        // console.log(dataToday[i][hora])\r\n        if(dataToday[i][hora]===1.0){\r\n            n1=n1+1;\r\n        }else{\r\n            n2=n2+1;\r\n        }\r\n    }\r\n\r\n    if(n1>n2){\r\n        n1 = 0;\r\n        n2 = 0;\r\n        return(\r\n            <div className=\"mt-5\">\r\n                <h2 className=\"NY-LocalTime\">New York local time:</h2>\r\n                <h2 className=\"dateNow\">{date_now_NY}</h2>\r\n                <h2 className=\"NY-LocalTime\">Overall Status of Traffic Now:</h2>\r\n                <h2 className=\"goodStatus\">Good</h2>\r\n            </div>\r\n        );\r\n    }else{\r\n        n1 = 0;\r\n        n2 = 0;\r\n        return(\r\n            <div className=\"mt-5\">\r\n                <h2 className=\"NY-LocalTime\">New York local time:</h2>\r\n                <h2 className=\"dateNow\">{date_now_NY}</h2>\r\n                <h2 className=\"NY-LocalTime\">Overall Status of Traffic Now:</h2>\r\n                <h2><span className=\"badStatus\">Bad</span></h2>\r\n            </div>\r\n        );\r\n\r\n    }\r\n        \r\n\r\n\r\n}\r\nexport default averageTraffic;","import { Bar} from 'react-chartjs-2';\r\nimport React, { useState, useEffect } from 'react';\r\nimport data from '../Data/TrafficJSON.json';\r\nimport TrafficHour from './TrafficHour'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../Styles/GraficaCalle.css'\r\n\r\nfunction graphData(props){\r\n    var labels_street = []\r\n\r\n    // data.Today.map(s => {\r\n    //     labels_street.push(s[props.selectedhour])\r\n    //     return null;\r\n    // })\r\n\r\n    data.Today.map(s => {\r\n        labels_street.push(s[\"street\"])\r\n        return null;\r\n    })\r\n\r\n    var color_street = [];\r\n    var data_street = []\r\n\r\n    data.Today.map(s => {\r\n\r\n        data_street.push(s[props.selectedhour])\r\n        if(s[props.selectedhour] === 1){\r\n            color_street.push('rgba(22, 191, 37, 22)')\r\n        }else{\r\n            color_street.push('rgba(222, 37, 37, 1)')\r\n        }\r\n        return null;\r\n    })\r\n\r\n    var return_array = [labels_street, data_street, color_street];\r\n\r\n    return return_array;\r\n\r\n\r\n}\r\n\r\n\r\nfunction GraficaHora(props) {\r\n    const [condition1, setcondition1]  = useState(true); \r\n    const [selectedHour, setSelectedHour] = useState(props)\r\n    useEffect(() =>{\r\n        setSelectedHour(props);\r\n    },[props])\r\n    \r\n    var graph_info = graphData(props)\r\n\r\n\r\n    console.log(props.selectedhour);\r\n\r\n    const [barData, ] = useState({\r\n        labels: graph_info[0],\r\n        datasets: [\r\n            {\r\n                label: selectedHour.selectedhour,\r\n                data: graph_info[1],\r\n                backgroundColor: graph_info[2],\r\n                borderWidth: 2\r\n            }\r\n        ]\r\n    });\r\n\r\n    // set options\r\n    const [barOptions, ] = useState({\r\n        indexAxis: 'y',\r\n  // Elements options apply to all of the options unless overridden in a dataset\r\n  // In this case, we are setting the border of each horizontal bar to be 2px wide\r\n        elements: {\r\n            bar: {\r\n            borderWidth: 2,\r\n            },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n            position: 'right',\r\n            },\r\n            title: {\r\n            display: true,\r\n            text: 'Hora:  ' + selectedHour.selectedhour + ':00',\r\n            },\r\n        },\r\n    });\r\n\r\n    if(condition1){\r\n        return (\r\n            <>\r\n            <h3 className=\"centerTitle\"> Visualize traffic per hour</h3>\r\n            <div className=\"BarExample\">\r\n                <Bar\r\n                    data={barData}\r\n                    options={barOptions} />\r\n            </div>\r\n            <p>Y axis displays all the streets that are measured. The X axis represents the amount of traffic expected\r\n                in that street for a given hour. The possible values for traffic are \"1\" or \"2\". \"1\" represents that the traffic\r\n                at that hour should be good, and a \"2\" in that street represents that the traffic in that street is bad at the chosen time.\r\n                </p>\r\n            <div className=\"centrado\">\r\n            <Button variant=\"primary\" size=\"lg\" onClick={() => \r\n                setcondition1(false)\r\n\r\n                }>Select another hour</Button>{' '}\r\n            </div>\r\n            </>\r\n        );\r\n    }else{\r\n        return(\r\n            <TrafficHour></TrafficHour>\r\n        )\r\n    }\r\n    // return JSX\r\n\r\n}\r\n\r\nexport default GraficaHora;","\r\nimport React from 'react';\r\nimport {useState} from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport GraficaHora from './GraficaHora'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../Styles/TrafficHour.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TrafficHour(){\r\n\r\n\r\n\r\n    const [selectedHour, setSelectedHour] = useState(\"Current Time\");\r\n\r\n    const [condition1, setcondition1]  = useState(true); \r\n\r\n    var labels_street = ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23']\r\n\r\n    function currentTimeSelection(){\r\n\r\n        if(selectedHour === \"Current Time\"){\r\n\r\n            var date_now_NY = new Date().toLocaleString(\"en-US\", {\r\n                timeZone: \"America/New_York\" ,\r\n                timeStyle: 'short',\r\n            });\r\n        \r\n            var hora=\"\";\r\n        \r\n            if(date_now_NY.length > 7){\r\n                if(date_now_NY.substring(6,8) === \"AM\"){\r\n                    hora = date_now_NY.substring(0,2)\r\n                }else{\r\n                    hora = parseInt(date_now_NY.substring(0,2)) + 12\r\n                }\r\n            }else{\r\n                if(date_now_NY.substring(5,7) === \"AM\"){\r\n                    hora = date_now_NY.substring(0,1)\r\n                }else{\r\n                    hora = parseInt(date_now_NY.substring(0,1)) + 12\r\n                }\r\n                \r\n            }\r\n            setSelectedHour(hora)\r\n            setcondition1(false)\r\n\r\n        }else{\r\n            setcondition1(false)\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    if(condition1 ){\r\n        return (\r\n            <div>\r\n                <h3 className=\"centerTitle\"> Visualize traffic per hour</h3>\r\n                <Form className=\"mt-5\">\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Control as=\"select\" onChange={ (event) =>{\r\n                            setSelectedHour(event.target.value)\r\n\r\n                        }} custom>\r\n\r\n\r\n                            \r\n                            {/* {dataToday.map(s => (\r\n                                    <option key={s[\"street\"]} value={s[\"street\"]}>{s[\"street\"]}</option>\r\n                            ))} */}\r\n                                <option>Current Time</option>\r\n                            {labels_street.map(s => (\r\n                                <option key={s} value={s}>{s}</option>\r\n                            ))}\r\n    \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <div className=\"centrado\">\r\n                    {/* <Button variant=\"primary\" size=\"lg\" onClick={() => \r\n                    setcondition1(false)\r\n\r\n                    }>\r\n                        Check Traffic for this Time\r\n                        </Button>{' '} */}\r\n\r\n                    <Button variant=\"primary\" size=\"lg\" onClick={() => \r\n                        currentTimeSelection()\r\n\r\n                    }>\r\n                        Check Traffic for this Time\r\n                    </Button>{' '}\r\n\r\n\r\n\r\n                </div>\r\n                \r\n                {/* <Prueba streetname={selectedStreet}></Prueba> */}\r\n    \r\n                \r\n            </div>\r\n\r\n        );\r\n        \r\n    }else {\r\n        console.log({selectedHour})\r\n        return(\r\n\r\n            <div>\r\n                <GraficaHora selectedhour={selectedHour}></GraficaHora>\r\n\r\n            </div>\r\n\r\n        )\r\n    \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default TrafficHour;","import React from 'react';\r\nimport '../Styles/Map.css'\r\n\r\n\r\nfunction Map(){\r\n    return(\r\n        <div className=\"centradoMapa\">\r\n<h3 className=\"centerTitle\"> Map of the predicted streets</h3>\r\n    <iframe title=\"mapa\" src=\"https://www.google.com/maps/d/u/0/embed?mid=1GXf-V5fhF0FqSJ4Ogfa4SFCOu5yG0_A0\" width=\"640\" height=\"480\"></iframe>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport TrafficStreet from './Components/TrafficStreet';\nimport AverageTraffic from './Components/averageTraffic';\nimport TrafficHour from './Components/TrafficHour'\nimport Map from './Components/Map'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Header></Header>\n            \n\n            <div className=\"container\">\n                <AverageTraffic></AverageTraffic>\n                \n                <TrafficHour></TrafficHour>\n\t\t\t\t<TrafficStreet></TrafficStreet>\n\n                <Map></Map>\n                \n               \n            </div>\n\n            </div>\n        );\n    }\n}\n \nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}